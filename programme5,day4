# returns minimum number of jumps to reach arr[n-1] from arr[0]
def minjumps(arr,n):
    #the number of jumps needed to reach the starting index is 0
    if(n<=1):
       return 0

    #return -1 if not possible to jump
    if (arr[0]==0):
        return -1

    #initialization
    #stores all time the maximal reachable index in the array
    maxreach=arr[0]
    #stores the amount of steps wecan still take
    step=arr[0]
    #stores the amount of jumps necessary to reach that maximal reachable position
    jump=1

    #start traversing array

    for i in range(1, n):
        #check if we have reached the end of the array
        if (i == n-1):
            return jump

        #updating maxReach
        maxReach=max(maxReach, i+arr[i])

        #we use a step to get to the current index
        step-=1;

        #check if the current index/position or lesser index
        #is the maximum reach point from the previous indexes
        if (i>=maxReach):
            return-1

        #driver program to test above function
        arr=[1,3,5,8,9,2,6,7,6,8,9]

